---
- name: Ensure Docker apt keyring directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Ensure Docker GPG key is installed
  ansible.builtin.shell: |
    set -e
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod 0644 /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Determine Ubuntu codename for Docker repository
  ansible.builtin.command: lsb_release -sc
  register: docker_prereqs_codename
  changed_when: false

- name: Determine system architecture for Docker repository
  ansible.builtin.command: dpkg --print-architecture
  register: docker_prereqs_arch
  changed_when: false

- name: Write Docker apt repository configuration
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/docker.list
    content: |
      deb [arch={{ docker_prereqs_arch.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ docker_prereqs_codename.stdout }} stable
    mode: "0644"
  register: docker_prereqs_repo

- name: Update apt cache for Docker repository
  ansible.builtin.command: apt-get -y update
  changed_when: false
  when: docker_prereqs_repo.changed

- name: Install Docker engine and Compose dependencies
  ansible.builtin.shell: |
    set -e
    export DEBIAN_FRONTEND="noninteractive"
    apt-get -y install --no-install-recommends \
      docker-ce \
      docker-ce-cli \
      containerd.io \
      docker-buildx-plugin \
      docker-compose-plugin
  args:
    creates: /usr/bin/docker

- name: Ensure Docker group contains deployment user
  ansible.builtin.user:
    name: "{{ docker_prereqs_user }}"
    groups:
      - docker
    append: true
  when: docker_prereqs_user | length > 0

- name: Ensure Docker service is enabled and running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
