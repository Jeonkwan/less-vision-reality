name: Generate Xray Credentials
description: Generate UUIDs, short IDs, and Reality key pairs using dedicated utility containers
inputs: {}
runs:
  using: composite
  steps:
    - name: Generate UUID
      id: uuid
      uses: docker://cgr.dev/chainguard/util-linux
      with:
        entrypoint: /bin/sh
        args: |
          -c '
            set -eu
            UUID=$(uuidgen | tr -d "\r")
            printf "value=%s\n" "$UUID" >>"$GITHUB_OUTPUT"
          '

    - name: Generate short IDs
      id: short_ids
      uses: docker://cgr.dev/chainguard/openssl
      with:
        entrypoint: /bin/sh
        args: |
          -c '
            set -eu
            IDS=""
            for _ in 1 2 3; do
              ID=$(openssl rand -hex 8 | tr -d "\r\n")
              if [ -z "$IDS" ]; then
                IDS="$ID"
              else
                IDS="$IDS $ID"
              fi
            done
            printf "value=%s\n" "$IDS" >>"$GITHUB_OUTPUT"
          '

    - name: Generate Xray key pair
      id: xray_keys
      uses: docker://ghcr.io/xtls/xray-core:latest
      with:
        entrypoint: /bin/sh
        args: |
          -c '
            set -eu
            XRAY_KEYS=$(xray x25519)
            PRIVATE_KEY=$(printf "%s\n" "$XRAY_KEYS" | awk -F": " "/Private key/{print \$2}")
            PUBLIC_KEY=$(printf "%s\n" "$XRAY_KEYS" | awk -F": " "/Public key/{print \$2}")
            printf "private=%s\n" "$PRIVATE_KEY" >>"$GITHUB_OUTPUT"
            printf "public=%s\n" "$PUBLIC_KEY" >>"$GITHUB_OUTPUT"
          '

    - name: Publish credentials
      shell: sh
      env:
        UUID: ${{ steps.uuid.outputs.value }}
        SHORT_IDS: ${{ steps.short_ids.outputs.value }}
        PRIVATE_KEY: ${{ steps.xray_keys.outputs.private }}
        PUBLIC_KEY: ${{ steps.xray_keys.outputs.public }}
      run: |
        set -eu

        OUTPUT_DIR="${RUNNER_TEMP:-/tmp}"
        mkdir -p "$OUTPUT_DIR"
        OUTPUT_FILE="$OUTPUT_DIR/xray-credentials.txt"

        set -- $SHORT_IDS
        {
          echo "XRAY_UUID: $UUID"
          echo "XRAY_SHORT_IDS:"
          for short_id in "$@"; do
            echo "  - $short_id"
          done
          echo "XRAY_PRIVATE_KEY: $PRIVATE_KEY"
          echo "XRAY_PUBLIC_KEY: $PUBLIC_KEY"
        } >"$OUTPUT_FILE"

        echo "::group::Xray Reality Credentials"
        cat "$OUTPUT_FILE"
        echo "::endgroup::"

        set -- $SHORT_IDS
        {
          echo "### Generated Xray Credentials"
          echo
          echo "- **UUID:** \`$UUID\`"
          echo "- **Short IDs:**"
          for short_id in "$@"; do
            echo "  - \`$short_id\`"
          done
          echo "- **Reality Private Key:** \`$PRIVATE_KEY\`"
          echo "- **Reality Public Key:** \`$PUBLIC_KEY\`"
          echo
          echo "> Copy the values above into your inventory or secret manager."
        } >>"$GITHUB_STEP_SUMMARY"
